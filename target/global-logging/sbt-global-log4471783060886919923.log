[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\amkch\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\amkch\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Adoptium Java 11.0.17)
[debug]       Load.loadUnit: plugins took 143.4446ms
[debug]       Load.loadUnit: defsScala took 0.8084ms
[debug] [Loading] Scanning directory C:\Users\amkch\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\amkch\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.9162 ms
[debug]           Load.resolveProject(global-plugins) took 57.7632ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\amkch\.sbt\1.0\plugins, plugins: List(<none>))) took 104.5725ms
[debug] [Loading] Done in C:\Users\amkch\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 130.5673ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2354ms
[debug]     Load.loadUnit(file:/C:/Users/amkch/.sbt/1.0/plugins/, ...) took 289.5737ms
[debug]   Load.apply: load took 476.3727ms
[debug]   Load.apply: resolveProjects took 8.2594ms
[debug]   Load.apply: finalTransforms took 70.2548ms
[debug]   Load.apply: config.delegates took 12.8797ms
[debug]   Load.apply: Def.make(settings)... took 718.9978ms
[debug]   Load.apply: structureIndex took 152.3891ms
[debug]   Load.apply: mkStreams took 6.6016ms
[info] loading global plugins from C:\Users\amkch\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6504.7409ms
[debug]           Load.loadUnit: plugins took 22.6528ms
[debug]           Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\amkch\IdeaProjects\StrategyGame\project
[debug]             Load.loadUnit: mkEval took 7.5644ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\amkch\IdeaProjects\StrategyGame\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6639 ms
[info] loading settings for project strategygame-build from idea.sbt ...
[debug]               Load.resolveProject(strategygame-build) took 4.8816ms
[debug]             Load.loadTransitive: finalizeProject(Project(id strategygame-build, base: C:\Users\amkch\IdeaProjects\StrategyGame\project, plugins: List(<none>))) took 7.072ms
[debug] [Loading] Done in C:\Users\amkch\IdeaProjects\StrategyGame\project, returning: (strategygame-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2938.4253ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6772ms
[debug]         Load.loadUnit(file:/C:/Users/amkch/IdeaProjects/StrategyGame/project/, ...) took 2966.8592ms
[debug]       Load.apply: load took 2968.3309ms
[debug]       Load.apply: resolveProjects took 0.1279ms
[debug]       Load.apply: finalTransforms took 8.0644ms
[debug]       Load.apply: config.delegates took 0.4261ms
[debug]       Load.apply: Def.make(settings)... took 105.5859ms
[debug]       Load.apply: structureIndex took 24.6012ms
[debug]       Load.apply: mkStreams took 0.0069ms
[info] loading project definition from C:\Users\amkch\IdeaProjects\StrategyGame\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4782.9519ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\amkch\IdeaProjects\StrategyGame
[debug]       Load.loadUnit: mkEval took 0.1907ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\amkch\IdeaProjects\StrategyGame, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0285 ms
[info] loading settings for project strategygame from build.sbt ...
[debug]         Load.resolveProject(strategygame) took 36.1407ms
[debug]       Load.loadTransitive: finalizeProject(Project(id strategygame, base: C:\Users\amkch\IdeaProjects\StrategyGame, plugins: List(<none>))) took 39.3763ms
[debug] [Loading] Done in C:\Users\amkch\IdeaProjects\StrategyGame, returning: (strategygame)
[debug]     Load.loadUnit: loadedProjectsRaw took 41.2493ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.0099ms
[debug]   Load.loadUnit(file:/C:/Users/amkch/IdeaProjects/StrategyGame/, ...) took 4824.8734ms
[debug] Load.apply: load took 4826.5577ms
[debug] Load.apply: resolveProjects took 0.1833ms
[debug] Load.apply: finalTransforms took 32.7899ms
[debug] Load.apply: config.delegates took 0.4285ms
[debug] Load.apply: Def.make(settings)... took 75.4172ms
[debug] Load.apply: structureIndex took 23.4883ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to strategygame (in build file:/C:/Users/amkch/IdeaProjects/StrategyGame/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64115 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64115, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to strategygame (in build file:/C:/Users/amkch/IdeaProjects/StrategyGame/)
[debug] > Exec(idea-shell, None, None)
